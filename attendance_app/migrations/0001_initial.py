# Generated by Django 3.1.7 on 2021-07-05 07:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('attending_year', models.CharField(max_length=10)),
                ('roll_no_prefix', models.CharField(default='', max_length=10)),
                ('roll_no_number', models.IntegerField(default=0)),
                ('roll_number', models.CharField(default='', max_length=20)),
                ('classroom', models.CharField(blank=True, max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=20)),
                ('semester', models.IntegerField(default=0)),
                ('latitude', models.DecimalField(decimal_places=15, default=10.0, max_digits=18)),
                ('longitude', models.DecimalField(decimal_places=15, default=10.0, max_digits=18)),
            ],
        ),
        migrations.CreateModel(
            name='ClassroomSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('module_no', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('module_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=15)),
                ('start_time', models.CharField(default='', max_length=20)),
                ('end_time', models.CharField(default='', max_length=20)),
                ('classroom', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroomsubject')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdYearStudent',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('roll_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='SecondYearStudent',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('roll_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='FourthYearStudent',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('roll_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='FirstYearStudent',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('roll_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
            ],
        ),
        migrations.AddField(
            model_name='classroomsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.subject'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(default='0:00:00')),
                ('date', models.DateField()),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.classroom')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attendance_app.timetable')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='classroomsubject',
            unique_together={('class_id', 'subject')},
        ),
    ]
